<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="urn:LiquidHub/SimpleSchema/2007/10" elementFormDefault="qualified" xmlns="urn:LiquidHub/SimpleSchema/2007/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:annotation>
    <xs:documentation>SimpleSchema expressed as SimpleSchema</xs:documentation>
  </xs:annotation>

  <!--complex-type-sequence-choice ADVANCED-->
  <xs:complexType name="schema">
    <xs:annotation>
      <xs:documentation>
        SimpleSchema declaration, root element.
        Container for class, enum, list, export and doc elements.
        Should specify @namespace attribute.
      </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="class" type="class" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="enum" type="enum" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="list" type="list" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="export" type="export" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="doc" type="doc" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
    <xs:attribute name="namespace" type="xs:string" />
  </xs:complexType>

  <!--complex-type-sequence-choice ADVANCED-->
  <xs:complexType name="class">
    <xs:annotation>
      <xs:documentation>
        Class declaration, child of schema element.
        May contain field, attribute and doc elements.
        Must specify @name attribute.
        May specify @type attribute, should only specify native types.
      </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="attribute" type="attribute" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="field" type="field" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="doc" type="doc" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="type" type="xs:string" />
  </xs:complexType>

  <!--complex-type-sequence-choice ADVANCED-->
  <xs:complexType name="field">
    <xs:annotation>
      <xs:documentation>
        Field declaration, child of class element.
        May contain attribute and doc elements.
        Including a child attribute element creates an implied class declaration.
        Must specify @name attribute.
        May specify @type or @required attributes.
        The @type attribute defaults to string.
        The @required attribute defaults to yes.
      </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="attribute" type="attribute" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="doc" type="doc" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="type" type="xs:string" />
    <xs:attribute name="required" type="yesno" />
  </xs:complexType>

  <!--string-enumeration-type BASIC-->
  <xs:simpleType name="yesno">
    <xs:annotation>
      <xs:documentation>Utility enumeration for yes/no values.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="yes" />
      <xs:enumeration value="no" />
    </xs:restriction>
  </xs:simpleType>

  <!--complex-type-sequence BASIC-->
  <xs:complexType name="attribute">
    <xs:annotation>
      <xs:documentation>
        Attribute declaration, child of class, field and list elements.
        Must specify @name attribute.
        May specify @type or @required attributes.
        The @type attribute defaults to string.
        The @required attribute defaults to no.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="type" type="xs:string" />
    <xs:attribute name="required" type="yesno" />
  </xs:complexType>

  <!--complex-type-sequence-choice ADVANCED-->
  <xs:complexType name="enum">
    <xs:annotation>
      <xs:documentation>
        Enumerated type declaration, child of schema element.
        Container for value and doc elements.
        Must specify @name attribute.
        Must contain one or more value elements.
      </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="value" type="value" maxOccurs="unbounded" />
      <xs:element name="doc" type="doc" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" />
  </xs:complexType>

  <!--global-simple-type BASIC-->
  <xs:simpleType name="value">
    <xs:annotation>
      <xs:documentation>
        Enumeration value declaration, child of enum element.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <!--complex-type-sequence-choice ADVANCED-->
  <xs:complexType name="list">
    <xs:annotation>
      <xs:documentation>
        List declaration, child of schema element.
        Container for item, attribute and doc elements.
        Must specify @name attribute.
        Must contain one or more item elements.
      </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="attribute" type="attribute" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="item" type="item" maxOccurs="unbounded" />
      <xs:element name="doc" type="doc" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" />
  </xs:complexType>

  <!--complex-type-sequence BASIC-->
  <xs:complexType name="item">
    <xs:annotation>
      <xs:documentation>
        List item declaration, child of list element.
        Must specify @name or @type attributes.
        The @name attribute defaults to @type if not present.
        The @type attribute defaults to @name if not present.
        May specify @required attribute.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" />
    <xs:attribute name="type" type="xs:string" />
    <xs:attribute name="required" type="yesno" />
  </xs:complexType>

  <!--complex-type-sequence BASIC-->
  <xs:complexType name="export">
    <xs:annotation>
      <xs:documentation>
        Type export declaration, child of schema element.
        Must specify @name or @type attributes.
        The @name attribute defaults to @type if not present.
        The @type attribute defaults to @name if not present.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" />
    <xs:attribute name="type" type="xs:string" />
  </xs:complexType>

  <!--global-simple-type BASIC-->
  <xs:simpleType name="doc">
    <xs:annotation>
      <xs:documentation>
        Documentation element, child of schema, class, field, enum and list elements.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <xs:element name="schema" type="schema" />

</xs:schema>